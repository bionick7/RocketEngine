#version 330 core

layout(location = 0) in vec3 squareVertices;
out vec2 uv;
out float pixel_size;

out vec3 debug_info;

uniform mat4 Transform; // 3d transform
uniform mat4 ViewMatrix; // To get the mid position
uniform mat4 ProjectionMatrix;  // For the final projection
uniform float ScreenWidth;

void main() {
	vec4 mid_point = ViewMatrix * Transform[3];
	mat4 transform_base = Transform;
	transform_base[3].xyzw = vec4(0, 0, 0, 1);
	mat4 billboard_transform = mat4(1);		// Just translation
	billboard_transform[3] = mid_point;

	mat4 final_matrix = billboard_transform * transform_base;
	vec4 cam_pos = final_matrix * vec4(squareVertices, 1);

	float R = abs(cam_pos.y);
	float d = -ViewMatrix[3].z;
	float angle = acos(R / d);
	float scale = sin(angle);
	float translation = R * R / d;
	mat4 adjustment = mat4(scale);
	adjustment[3].xyzw = vec4(0, 0, translation, 1);

	debug_info = vec3(sin(angle), cos(angle), 0);
	//debug_info = cam_pos.xyz;

	adjustment = mat4(1);

	final_matrix = ProjectionMatrix * adjustment * final_matrix;

	gl_Position = final_matrix * vec4(squareVertices, 1);
	uv = squareVertices.xy;

	vec4 reference1 = final_matrix * vec4(.5, 0, 0, 1);
	vec4 reference2 = final_matrix * vec4(-.5, 0, 0, 1);
	pixel_size = 2 * (reference1.x - reference2.x) / (reference1.w + reference2.w) * ScreenWidth;
}